//
//  Font.swift
//  chip8
//
//  Created by Arthur Dexter on 3/2/17.
//  Copyright Â© 2017 LivingSocial. All rights reserved.
//

import Foundation

let HexDigitsFont: [[UInt8]] = [
    [0xF0, 0x90, 0x90, 0x90, 0xF0],
    [0x20, 0x60, 0x20, 0x20, 0x70],
    [0xF0, 0x10, 0xF0, 0x80, 0xF0],
    [0xF0, 0x10, 0xF0, 0x10, 0xF0],
    [0x90, 0x90, 0xF0, 0x10, 0x10],
    [0xF0, 0x80, 0xF0, 0x10, 0xF0],
    [0xF0, 0x80, 0xF0, 0x90, 0xF0],
    [0xF0, 0x10, 0x20, 0x40, 0x40],
    [0xF0, 0x90, 0xF0, 0x90, 0xF0],
    [0xF0, 0x90, 0xF0, 0x10, 0xF0],
    [0xF0, 0x90, 0xF0, 0x90, 0x90],
    [0xE0, 0x90, 0xE0, 0x90, 0xE0],
    [0xF0, 0x80, 0x80, 0x80, 0xF0],
    [0xE0, 0x90, 0x90, 0x90, 0xE0],
    [0xF0, 0x80, 0xF0, 0x80, 0xF0],
    [0xF0, 0x80, 0xF0, 0x80, 0x80]
]


func storeFont(in memory: Memory) throws {
    var address: UInt16 = 0
    for digit in HexDigitsFont {
        try memory.write(buffer: digit, to: Pointer(address: address))
        address += UInt16(digit.count)
    }
}

func fontAddress(of digit: UInt8) -> UInt16 {
    var address:UInt16 = 0
    for i in 0..<Int(digit & 0xFF) {
        address += UInt16(HexDigitsFont[i].count)
    }
    return address
}
